TIPS
In Azure Resource Graph explorer, make sure you've got the scope set correctly. It defaults to Management Groups. Subscriptions is appropriate.
Run '.show tables' to see what tables 

//Orphaned Disks:
Resources
| where type has "microsoft.compute/disks"
| extend diskState = tostring(properties.diskState)
| where managedBy == ""
or diskState == 'Unattached'
| project id, diskState, resourceGroup, location, subscriptionId

//Orphaned NICs:
Resources
| where type has "microsoft.network/networkinterfaces"
| where "{nicWithPrivateEndpoints}" !has id
| where properties !has 'virtualmachine'
| project id, resourceGroup, location, subscriptionId

//Orphaned publicIpAddresses:
Resources
| where type has "microsoft.network/publicIPAddresses"
| extend ipAllocationMethod = tostring(properties.publicIPAllocationMethod)
| where properties.ipConfiguration == ""  // No associated IP configuration
| project id, ipAllocationMethod, resourceGroup, location, subscriptionId

//Orphaned loadbalancers:
Resources
| where type has "microsoft.network/loadBalancers"
| where isempty(properties.backendAddressPools) and isempty(properties.frontendIPConfigurations)  // No backend pools or front-end configurations
| project id, resourceGroup, location, subscriptionId

//Orphaned WebServerFarms (App Service Plans):
Resources
| where type has "microsoft.web/serverfarms"
| extend hostingApps = tostring(properties.numberOfSites)
| where hostingApps == "0"  // No apps running on the plan
| project id, resourceGroup, location, subscriptionId

//
Resources
| where type has "microsoft.compute/virtualMachines"
| join kind=inner (
    Perf
    | where counterName == "Percentage CPU"
    | summarize avgUsage = avg(CounterValue) by resourceId
    | where avgUsage < 5  // VMs with low CPU usage (adjust threshold as needed)
) on $left.id == $right.resourceId
| project id, resourceGroup, location, subscriptionId, avgUsage

Resources
| where type has "microsoft.network/networkSecurityGroups"
| where isempty(properties.networkInterfaces) and isempty(properties.subnets)  // Not associated with any NIC or subnet
| project id, resourceGroup, location, subscriptionId

Resources
| where type has "microsoft.network/virtualNetworks"
| where isempty(properties.subnets) or isempty(properties.virtualNetworkPeerings)  // No subnets or peerings
| project id, resourceGroup, location, subscriptionId

Resources
| where type has "microsoft.network/expressRouteCircuits"
| where isempty(properties.authorizations) and isempty(properties.peerings)  // No peerings or authorizations
| project id, resourceGroup, location, subscriptionId

ResourceContainers
| where type == "microsoft.resources/subscriptions/resourceGroups"
| join kind=leftanti (
    Resources
    | summarize by resourceGroup, subscriptionId
) on resourceGroup, subscriptionId
| project id, resourceGroup, subscriptionId

//What extensions are installed on your VM:
Resources
| where type == 'microsoft.compute/virtualmachines'
| extend
  JoinID = toupper(id),
  OSName = tostring(properties.osProfile.computerName),
  OSType = tostring(properties.storageProfile.osDisk.osType),
  VMSize = tostring(properties.hardwareProfile.vmSize)
| join kind=leftouter(
  Resources
  | where type == 'microsoft.compute/virtualmachines/extensions'
  | extend
    VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),
    ExtensionName = name
) on $left.JoinID == $right.VMId
| summarize Extensions = make_list(ExtensionName) by id, OSName, OSType, VMSize
| order by tolower(OSName) asc
